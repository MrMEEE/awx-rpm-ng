#!/bin/bash

source $(dirname "$0")/common-functions

OLDVERSION=$(get_version)
BUILDSTATUS=$2
PACKAGENAME=$3

echo "Currently on version $OLDVERSION"

if [ -z "$1" ]; then
        echo "Please provide AWX version"
	echo
	cd /opt/$BASEPATH_DIR/versions/
	git branch -rv |cut -f2- -d\/
        exit 1
fi

VERSION=$1

if [[ "$VERSION" == "save" ]]; then
	echo "Saving changes to version: $OLDVERSION"
fi

$(dirname "$0")/checkbuilds all md $BUILDSTATUS $PACKAGENAME > /opt/$BASEPATH_DIR/versions/README.md

cd /opt/$BASEPATH_DIR/versions/
git add /opt/$BASEPATH_DIR/versions/README.md
git add /opt/$BASEPATH_DIR/versions/deps
git add /opt/$BASEPATH_DIR/versions/logs
git add /opt/$BASEPATH_DIR/versions/awx-rpm

echo "Publishing Package build changes"
git commit -qam "Publishing build changes for version: `cat /opt/$BASEPATH_DIR/working-version`" &> /dev/null 
git push &> /dev/null

if [[ "$VERSION" == "save" ]]; then
	exit 0
fi

if [[ `git branch |grep $VERSION | wc -l` -gt 0 ]]; then
	git checkout $VERSION
	VERSIONEXISTS=1
else
	echo "Version $VERSION hasn't been generated yet"
	VERSIONEXISTS=0
fi

cd /opt/$BASEPATH_DIR/awx/

git checkout -q devel
git pull -q

if [ `git tag |grep $VERSION` ]; then
        git -c advice.detachedHead=false checkout $VERSION
	echo "Version changed to: $VERSION"
	if [[ $VERSIONEXISTS == 0 ]];then
		echo "Creating New Version"
		cd /opt/$BASEPATH_DIR/versions/
		git switch --orphan $VERSION
		touch /opt/$BASEPATH_DIR/versions/VERSION-$VERSION
		git add /opt/$BASEPATH_DIR/versions/VERSION-$VERSION
		git commit -am "Created version: $VERSION"
	fi
else
        echo "Version $VERSION doesn't exist"
	VERSION=$OLDVERSION
	cd /opt/$BASEPATH_DIR/versions/
	git checkout -q $VERSION
fi

cd /opt/$BASEPATH_DIR/versions/
git push origin -q --all

echo "$VERSION" > /opt/$BASEPATH_DIR/working-version

mock --scrub=all
